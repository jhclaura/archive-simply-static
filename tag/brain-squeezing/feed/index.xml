<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>brain-squeezing &#8211; Laura Juo-Hsin Chen</title>
	<atom:link href="/tag/brain-squeezing/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>We are imaginative beasts.</description>
	<lastBuildDate>Fri, 20 Nov 2015 22:19:44 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<item>
		<title>{ Brain } &#8211; beta version</title>
		<link>/brain-_-beta-version/</link>
					<comments>/brain-_-beta-version/#respond</comments>
		
		<dc:creator><![CDATA[Laura]]></dc:creator>
		<pubDate>Sun, 25 Jan 2015 23:19:50 +0000</pubDate>
				<category><![CDATA[Automata]]></category>
		<category><![CDATA[Blog]]></category>
		<category><![CDATA[Fall 2014]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<category><![CDATA[experiment]]></category>
		<category><![CDATA[fantasy]]></category>
		<category><![CDATA[final]]></category>
		<category><![CDATA[first time]]></category>
		<category><![CDATA[ohyay]]></category>
		<guid isPermaLink="false">/?p=1953</guid>

					<description><![CDATA[Brain &#60;beta version&#62; Brain is an automata that shows how the brain works when you think. Composed of handmade steel wires and knotted rope as pulley system. Brain functions in... <a class="read-more" href="/brain-_-beta-version/">Read The Rest &#8594;</a>]]></description>
										<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2015/01/6B2A0867.jpg"><img loading="lazy" class="alignnone size-large wp-image-1957" src="/wp-content/uploads/2015/01/6B2A0867-1024x683.jpg" alt="6B2A0867" width="1024" height="683" srcset="/wp-content/uploads/2015/01/6B2A0867-1024x683.jpg 1024w, /wp-content/uploads/2015/01/6B2A0867-300x200.jpg 300w, /wp-content/uploads/2015/01/6B2A0867-304x203.jpg 304w, /wp-content/uploads/2015/01/6B2A0867.jpg 1200w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></p>
<p><span style="font-size: 12pt;"><strong><span style="font-family: 'Andale Mono', Times;">Brain &lt;beta version&gt;</span></strong></span></p>
<p><iframe loading="lazy" src="//player.vimeo.com/video/117744115?color=c9ff23" width="800" height="450" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<p>Brain is an automata that shows how the brain works when you think. Composed of handmade steel wires and knotted rope as pulley system. Brain functions in two ways:</p>
<p>1) <span style="font-family: Georgia, Palatino;"><em>Conscious</em></span> &#8211;&gt; Hand cranking the steel wheel to fluctuate the shells, and also rotating the wheels on the other face of brain.</p>
<p>2) <span style="font-family: Georgia, Palatino;">Subconscious</span> &#8211;&gt; Using ultrasonic sensor to measure the distance, part of the brain will function automatically once the user is in position / wearing the helmet.</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt;"><strong><span style="font-family: 'Andale Mono', Times;">Exposing yourself &amp; Taking in the unknown</span></strong></span></p>
<p>The most exciting/weird experience of this project is the moment you stick your head into it. The motor above you starts moving; the vibration and sounds of the pulley system; the view you see through the wood cubes, knotted ropes, and steel wheels. It&#8217;s the mixture feelling of exposing yourself to undergo the vulnerability, and taking in the unknown to activate all your senses in the narrow space.</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-family: 'Andale Mono', Times;"><strong>2D/paper &#8211;&gt; 3D/physical</strong></span></p>
<p>Inspired by renowned kinetic sculptor <span style="color: #33cccc;"><a style="color: #33cccc;" href="http://www.arthurganson.com/" target="_blank">Arthur Ganson</a></span>, I decided to use steel wire as the means for my <span style="color: #33cccc;"><a style="color: #33cccc;" href="/category/automata/" target="_blank">Automata</a></span> final project. Based on the photos and videos collecting from internet, I sketched out the shape first, and then tried to figure out how to bend the steel wire into wheel.</p>
<p><img loading="lazy" class="alignnone wp-image-1968 size-full" src="/wp-content/uploads/2015/01/brain_node.png" alt="brain_node" width="400" height="157" srcset="/wp-content/uploads/2015/01/brain_node.png 400w, /wp-content/uploads/2015/01/brain_node-300x118.png 300w, /wp-content/uploads/2015/01/brain_node-304x119.png 304w" sizes="(max-width: 400px) 100vw, 400px" /></p>
<p>It&#8217;s a trial and error process, but thanks to magical <span style="color: #33cccc;"><a style="color: #33cccc;" href="http://www.zklogan.net/" target="_blank">Zoe Logan</a></span>, I learned different pliers and jigs to make proper(at least better than free style) steel wheel. The whole journey is a little bit pain in the ass, but the result is satisfying. Beside boosting my stamina with heavy laboring, I&#8217;m glad the efforts somehow accumulating into something weird and terrifying looking.</p>
<p>&nbsp;</p>
<p>I learned a lot from this transforming 2d ideas into 3d physical form process: the pros and cons of wire bending compare to the thick steel connected by welding; the limit of series connection the wheels with knotted ropes; the necessity of middleware of two big wheels to increase the tension.</p>
<p><a href='/brain-_-beta-version/6b2a0882/'><img width="150" height="150" src="/wp-content/uploads/2015/01/6B2A0882-150x150.jpg" class="attachment-thumbnail size-thumbnail" alt="" loading="lazy" /></a><br />
<a href='/brain-_-beta-version/6b2a0846/'><img width="150" height="150" src="/wp-content/uploads/2015/01/6B2A0846-150x150.jpg" class="attachment-thumbnail size-thumbnail" alt="" loading="lazy" /></a><br />
<a href='/brain-_-beta-version/6b2a0848/'><img width="150" height="150" src="/wp-content/uploads/2015/01/6B2A0848-150x150.jpg" class="attachment-thumbnail size-thumbnail" alt="" loading="lazy" /></a><br />
<a href='/brain-_-beta-version/6b2a0869/'><img width="150" height="150" src="/wp-content/uploads/2015/01/6B2A0869-150x150.jpg" class="attachment-thumbnail size-thumbnail" alt="" loading="lazy" /></a><br />
<a href='/brain-_-beta-version/6b2a0871/'><img width="150" height="150" src="/wp-content/uploads/2015/01/6B2A0871-150x150.jpg" class="attachment-thumbnail size-thumbnail" alt="" loading="lazy" /></a><br />
<a href='/brain-_-beta-version/6b2a0891/'><img width="150" height="150" src="/wp-content/uploads/2015/01/6B2A0891-150x150.jpg" class="attachment-thumbnail size-thumbnail" alt="" loading="lazy" /></a><br />
<a href='/brain-_-beta-version/6b2a0894/'><img width="150" height="150" src="/wp-content/uploads/2015/01/6B2A0894-150x150.jpg" class="attachment-thumbnail size-thumbnail" alt="" loading="lazy" /></a></p>
<p>&nbsp;</p>
<p><span style="font-family: 'Andale Mono', Times;"><strong>gamma version</strong></span></p>
<p>Multiple motors to fully construct the node system of brain on all the faces. Pill the paper off the acrylic sheets so it&#8217;d be totally transparent. Could have multiple hand crank nodes as well so it will become a cooperative <em><span style="font-family: Georgia, Palatino;">&#8220;thinking&#8221;</span></em> system.</p>
<p><a href="/wp-content/uploads/2015/01/brain_idea.png"><img loading="lazy" class="alignnone size-full wp-image-1967" src="/wp-content/uploads/2015/01/brain_idea.png" alt="brain_idea" width="400" height="667" srcset="/wp-content/uploads/2015/01/brain_idea.png 400w, /wp-content/uploads/2015/01/brain_idea-180x300.png 180w, /wp-content/uploads/2015/01/brain_idea-304x507.png 304w" sizes="(max-width: 400px) 100vw, 400px" /></a></p>
<p>&nbsp;</p>
<p><span style="font-family: 'Andale Mono', Times;"><strong>Related posts</strong></span></p>
<p><span style="color: #33cccc;"><a style="color: #33cccc;" title="{ Brain } – Automata Final" href="/brain-automata-final/" target="_blank">Concept Sketch</a></span>, <span style="color: #33cccc;"><a style="color: #33cccc;" title="{ Brain } – process of painfully crafting your idea" href="/brain-process-of-painfully-crafting-your-idea/" target="_blank">Process of Making</a></span>.</p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>/brain-_-beta-version/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>{ Brain } &#8211; process of painfully crafting your idea</title>
		<link>/brain-process-of-painfully-crafting-your-idea/</link>
					<comments>/brain-process-of-painfully-crafting-your-idea/#comments</comments>
		
		<dc:creator><![CDATA[Laura]]></dc:creator>
		<pubDate>Mon, 01 Dec 2014 22:48:10 +0000</pubDate>
				<category><![CDATA[Automata]]></category>
		<category><![CDATA[Blog]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<category><![CDATA[fantasy]]></category>
		<category><![CDATA[final]]></category>
		<category><![CDATA[motor]]></category>
		<category><![CDATA[noooooo]]></category>
		<guid isPermaLink="false">/?p=1757</guid>

					<description><![CDATA[SO. Here&#8217;s the report of my { brain } automata making process. First, prototype with cardboard. Laser cut 11 pieces of pentagons, and stick them together with my favorite tool... <a class="read-more" href="/brain-process-of-painfully-crafting-your-idea/">Read The Rest &#8594;</a>]]></description>
										<content:encoded><![CDATA[<p>SO. Here&#8217;s the report of my { brain } automata making process.</p>
<p>First, prototype with cardboard. Laser cut 11 pieces of pentagons, and stick them together with my favorite tool &#8211; duck tapes.<br />
<a href="/wp-content/uploads/2014/12/helmet.jpg"><img loading="lazy" class="alignnone size-full wp-image-1758" src="/wp-content/uploads/2014/12/helmet.jpg" alt="helmet" width="1000" height="1000" srcset="/wp-content/uploads/2014/12/helmet.jpg 1000w, /wp-content/uploads/2014/12/helmet-150x150.jpg 150w, /wp-content/uploads/2014/12/helmet-300x300.jpg 300w, /wp-content/uploads/2014/12/helmet-304x304.jpg 304w" sizes="(max-width: 1000px) 100vw, 1000px" /></a></p>
<p>&nbsp;</p>
<p>And endless steel wire bending.<a href="/wp-content/uploads/2014/12/2014-11-23-22.56.04.jpg"><img loading="lazy" class="alignnone size-full wp-image-1759" src="/wp-content/uploads/2014/12/2014-11-23-22.56.04.jpg" alt="2014-11-23 22.56.04" width="1000" height="750" srcset="/wp-content/uploads/2014/12/2014-11-23-22.56.04.jpg 1000w, /wp-content/uploads/2014/12/2014-11-23-22.56.04-300x225.jpg 300w, /wp-content/uploads/2014/12/2014-11-23-22.56.04-304x228.jpg 304w" sizes="(max-width: 1000px) 100vw, 1000px" /></a></p>
<p>&nbsp;</p>
<p>Laser Cut transparent 3/16&#8243; acrylic and build into dodecahedron  with hinges and machine screws.<br />
<a href="/wp-content/uploads/2014/12/2014-11-30-17.00.26.jpg"><img loading="lazy" class="alignnone size-full wp-image-1760" src="/wp-content/uploads/2014/12/2014-11-30-17.00.26.jpg" alt="2014-11-30 17.00.26" width="1000" height="750" srcset="/wp-content/uploads/2014/12/2014-11-30-17.00.26.jpg 1000w, /wp-content/uploads/2014/12/2014-11-30-17.00.26-300x225.jpg 300w, /wp-content/uploads/2014/12/2014-11-30-17.00.26-304x228.jpg 304w" sizes="(max-width: 1000px) 100vw, 1000px" /></a></p>
<p>And mount the motor my pulley system!<br />
<a href="/wp-content/uploads/2014/12/pully_Motor.gif"><img loading="lazy" class="alignnone size-full wp-image-1762" src="/wp-content/uploads/2014/12/pully_Motor.gif" alt="pully_Motor" width="492" height="264" /></a></p>
<p>&nbsp;</p>
<p>Things all sound easy but there are actually lot of painful struggling &#8211;&gt;</p>
<ol>
<li>Pre drilling hole on small wood tube is hard. Crack easily.</li>
<li>Rope has to be trimmed neatly or it will stuck with wires.</li>
<li>Bad binding with wire and motor shaft. Asked magical Ben Light, ordered a shaft coupler to connect wire and DC motor.</li>
<li>Have to relocation the motor. Should leave more space for the shaft side.</li>
<li>Friction debugging nightmare&#8230;</li>
</ol>
<p>SO. I&#8217;m really concerned about the possibility of finishing it before Final&#8230;. but whatever, I&#8217;ll keep working on it :DDDDD</p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>/brain-process-of-painfully-crafting-your-idea/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>{ Brain } &#8211; Automata Final</title>
		<link>/brain-automata-final/</link>
					<comments>/brain-automata-final/#comments</comments>
		
		<dc:creator><![CDATA[Laura]]></dc:creator>
		<pubDate>Mon, 24 Nov 2014 23:28:33 +0000</pubDate>
				<category><![CDATA[Automata]]></category>
		<category><![CDATA[Blog]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<guid isPermaLink="false">/?p=1754</guid>

					<description><![CDATA[]]></description>
										<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2014/11/automata_finalS.png"><img loading="lazy" class="alignnone size-full wp-image-1755" src="/wp-content/uploads/2014/11/automata_finalS.png" alt="automata_finalS" width="1154" height="1500" srcset="/wp-content/uploads/2014/11/automata_finalS.png 1154w, /wp-content/uploads/2014/11/automata_finalS-230x300.png 230w, /wp-content/uploads/2014/11/automata_finalS-787x1024.png 787w, /wp-content/uploads/2014/11/automata_finalS-304x395.png 304w" sizes="(max-width: 1154px) 100vw, 1154px" /></a></p>
]]></content:encoded>
					
					<wfw:commentRss>/brain-automata-final/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>{Rabbit_Hole}</title>
		<link>/composition-rabbit_hole/</link>
					<comments>/composition-rabbit_hole/#respond</comments>
		
		<dc:creator><![CDATA[Laura]]></dc:creator>
		<pubDate>Mon, 14 Apr 2014 02:41:32 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Coding for Emotional Impact]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[fantasy]]></category>
		<category><![CDATA[final]]></category>
		<category><![CDATA[game]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[life]]></category>
		<category><![CDATA[Maya]]></category>
		<category><![CDATA[project]]></category>
		<category><![CDATA[three.js]]></category>
		<category><![CDATA[web]]></category>
		<guid isPermaLink="false">/?p=1409</guid>

					<description><![CDATA[{currently works with Chrome and Firefox browser} For the composition assignment the final of Coding for Emotional Impact class, I want to create something with multiple layers and is self-explained. Inspired by... <a class="read-more" href="/composition-rabbit_hole/">Read The Rest &#8594;</a>]]></description>
										<content:encoded><![CDATA[<p><span style="font-size: 14pt;">{currently works with <span style="color: #000000;">Chrome</span> and Firefox browser}</span></p>
<p>For <del>the composition assignment</del> the final of <em>Coding for Emotional Impact</em> class, I want to create something with multiple layers and is self-explained. Inspired by the description of computer vision is a rabbit hole from <a href="http://andysigler.com/" target="_blank">Andy</a>(because I&#8217;m learning <a href="http://threejs.org/" target="_blank">Three.js</a> by myself recently), I wanted to make a game about &#8220;Rabbit Hole&#8221;, and my biggest assumption is that everyone is sort of down the rabbit hole.</p>
<p>ps. It&#8217;s not really a fun game to play. Still confusing should it be fun to play or just an emotion-building nowhere&#8230;</p>
<div style="color: #222222;">&#8211; Title</div>
<div style="color: #222222;"><strong><span style="font-size: 12pt;"><span style="font-family: 'andale mono', times;">Rabbit Hole</span></span></strong></div>
<div style="color: #222222;"></div>
<div style="color: #222222;"></div>
<div style="color: #222222;">&#8211; Environment</div>
<div style="color: #222222;"><a href="/wp-content/uploads/2014/04/environment.png"><img loading="lazy" class="alignnone wp-image-1426 " src="/wp-content/uploads/2014/04/environment.png" alt="environment" width="382" height="494" srcset="/wp-content/uploads/2014/04/environment.png 500w, /wp-content/uploads/2014/04/environment-231x300.png 231w, /wp-content/uploads/2014/04/environment-304x393.png 304w" sizes="(max-width: 382px) 100vw, 382px" /></a>     <a href="/wp-content/uploads/2014/04/environment2.png"><img loading="lazy" class="alignnone wp-image-1427 " src="/wp-content/uploads/2014/04/environment2.png" alt="environment2" width="383" height="496" srcset="/wp-content/uploads/2014/04/environment2.png 500w, /wp-content/uploads/2014/04/environment2-231x300.png 231w, /wp-content/uploads/2014/04/environment2-304x393.png 304w" sizes="(max-width: 383px) 100vw, 383px" /></a></div>
<div style="color: #222222;"></div>
<div style="color: #222222;">&#8211; Audience</div>
<div style="color: #222222;"><span style="font-family: 'andale mono', times; font-size: 12pt;">Whoever also down the rabbit hole or wonder how it feel down there.</span></div>
<div style="color: #222222;"></div>
<div style="color: #222222;"><span style="font-family: 'andale mono', times; font-size: 12pt;"> </span></div>
<div style="color: #222222;">&#8211; Narrative arc</div>
<div style="color: #222222;"><span style="font-family: 'Book Antiqua', Palatino; font-size: medium;"><span style="font-family: 'Andale Mono', Times;"><strong>Rabbit Hole</strong>&#8211;</span></span><span style="font-family: 'Book Antiqua', Palatino; font-size: medium; color: #888888;"><em>Metaphor for the conceptual path which is thought to lead to the true nature of reality. Infinitesimally deep and complex, venturing too far down is probably not that great of an idea.</em></span></div>
<p dir="ltr"><span style="font-family: 'Andale Mono', Times; font-size: medium;"><strong>Literary Nonsense-</strong></span> <span style="font-size: medium; color: #808080;"><em><span style="line-height: 1.5em; font-family: 'Book Antiqua', Palatino;">has no system of logic, although it may imply the existence of an inscrutable one, just beyond our grasp.</span></em></span></p>
<p dir="ltr">And below are three snapshots of what I&#8217;ve built so far. I made my own models in Maya and drew textures in Photoshop. <span style="color: #999999;"><del>Can&#8217;t view online because of some web-related issue I can&#8217;t solve to load the music</del></span>(SOLVED_by hard coding the url of music file path). But have no ideas how to do the transition from scene to scene&#8230;</p>
<p dir="ltr">SCENE_ZERO: <a href="http://www.rabbithole.link/" target="_blank">http://www.rabbithole.link/</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/open.png"><img loading="lazy" class="alignnone size-full wp-image-1477" src="/wp-content/uploads/2014/04/open.png" alt="open" width="800" height="403" srcset="/wp-content/uploads/2014/04/open.png 800w, /wp-content/uploads/2014/04/open-300x151.png 300w, /wp-content/uploads/2014/04/open-304x153.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENE_ONE: <a href="http://www.rabbithole.link/index_D.html" target="_blank">http://www.rabbithole.link/index_D.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.26.14-PM.png"><img loading="lazy" class="alignnone size-full wp-image-1411" src="/wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.26.14-PM.png" alt="Screen Shot 2014-04-13 at 10.26.14 PM" width="800" height="436" srcset="/wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.26.14-PM.png 800w, /wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.26.14-PM-300x163.png 300w, /wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.26.14-PM-304x165.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENCE_TWO: <a href="http://www.rabbithole.link/index_G.html" target="_blank">http://www.rabbithole.link/index_G.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.27.30-PM.png"><img loading="lazy" class="alignnone size-full wp-image-1412" src="/wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.27.30-PM.png" alt="Screen Shot 2014-04-13 at 10.27.30 PM" width="800" height="436" srcset="/wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.27.30-PM.png 800w, /wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.27.30-PM-300x163.png 300w, /wp-content/uploads/2014/04/Screen-Shot-2014-04-13-at-10.27.30-PM-304x165.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENE_THREE: <a href="http://www.rabbithole.link/index_S.html" target="_blank">http://www.rabbithole.link/index_S.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/Screen-Shot-2014-04-20-at-6.44.00-PM.png"><img loading="lazy" class="alignnone size-full wp-image-1425" src="/wp-content/uploads/2014/04/Screen-Shot-2014-04-20-at-6.44.00-PM.png" alt="Screen Shot 2014-04-20 at 6.44.00 PM" width="800" height="397" srcset="/wp-content/uploads/2014/04/Screen-Shot-2014-04-20-at-6.44.00-PM.png 800w, /wp-content/uploads/2014/04/Screen-Shot-2014-04-20-at-6.44.00-PM-300x148.png 300w, /wp-content/uploads/2014/04/Screen-Shot-2014-04-20-at-6.44.00-PM-304x150.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENE_FOUR: <a href="http://www.rabbithole.link/index_M.html" target="_blank">http://www.rabbithole.link/index_M.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/maze.png"><img loading="lazy" class="alignnone size-full wp-image-1463" src="/wp-content/uploads/2014/04/maze.png" alt="maze" width="800" height="401" srcset="/wp-content/uploads/2014/04/maze.png 800w, /wp-content/uploads/2014/04/maze-300x150.png 300w, /wp-content/uploads/2014/04/maze-304x152.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENE_FIVE: <a href="http://www.rabbithole.link/index_T.html" target="_blank">http://www.rabbithole.link/index_T.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/TV.png"><img loading="lazy" class="alignnone size-full wp-image-1467" src="/wp-content/uploads/2014/04/TV.png" alt="TV" width="800" height="295" srcset="/wp-content/uploads/2014/04/TV.png 800w, /wp-content/uploads/2014/04/TV-300x110.png 300w, /wp-content/uploads/2014/04/TV-304x112.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENE_SIX: <a href="http://www.rabbithole.link/index_F.html" target="_blank">http://www.rabbithole.link/index_F.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/jump.png"><img loading="lazy" class="alignnone size-full wp-image-1472" src="/wp-content/uploads/2014/04/jump.png" alt="jump" width="800" height="397" srcset="/wp-content/uploads/2014/04/jump.png 800w, /wp-content/uploads/2014/04/jump-300x148.png 300w, /wp-content/uploads/2014/04/jump-304x150.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENE_SEVEN: <a href="http://www.rabbithole.link/index_V.html" target="_blank">http://www.rabbithole.link/index_V.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/voice.png"><img loading="lazy" class="alignnone size-full wp-image-1469" src="/wp-content/uploads/2014/04/voice.png" alt="voice" width="800" height="309" srcset="/wp-content/uploads/2014/04/voice.png 800w, /wp-content/uploads/2014/04/voice-300x115.png 300w, /wp-content/uploads/2014/04/voice-304x117.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">SCENE_EIGHT: <a href="http://www.rabbithole.link/index_E.html" target="_blank">http://www.rabbithole.link/index_E.html</a></p>
<p dir="ltr"><a href="/wp-content/uploads/2014/04/Elevator.png"><img loading="lazy" class="alignnone size-full wp-image-1474" src="/wp-content/uploads/2014/04/Elevator.png" alt="Elevator" width="800" height="399" srcset="/wp-content/uploads/2014/04/Elevator.png 800w, /wp-content/uploads/2014/04/Elevator-300x149.png 300w, /wp-content/uploads/2014/04/Elevator-304x151.png 304w" sizes="(max-width: 800px) 100vw, 800px" /></a></p>
<p dir="ltr">( Three.js + web stuff ) == super deep rabbit hole.</p>
]]></content:encoded>
					
					<wfw:commentRss>/composition-rabbit_hole/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_4_PatchBallsFlies</title>
		<link>/icm_4_patchballsflies/</link>
					<comments>/icm_4_patchballsflies/#respond</comments>
		
		<dc:creator><![CDATA[Laura]]></dc:creator>
		<pubDate>Tue, 01 Oct 2013 05:17:02 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<category><![CDATA[processing]]></category>
		<guid isPermaLink="false">/?p=229</guid>

					<description><![CDATA[Here&#8217;s the combination of what I&#8217;ve learned so far from Learning Processing and The Nature of Code. I call it &#8220;Patch. Balls. and Flies&#8221;. It&#8217;s kind of messy but I&#8217;m glad... <a class="read-more" href="/icm_4_patchballsflies/">Read The Rest &#8594;</a>]]></description>
										<content:encoded><![CDATA[<p>Here&#8217;s the combination of what I&#8217;ve learned so far from <span style="color: #0066cc;"><a href="http://www.learningprocessing.com/" target="_blank"><span style="color: #0066cc;">Learning Processing</span></a></span> and <span style="color: #0066cc;"><a href="http://natureofcode.com/book/" target="_blank"><span style="color: #0066cc;">The Nature of Code</span></a></span>. I call it &#8220;Patch. Balls. and Flies&#8221;. It&#8217;s kind of messy but I&#8217;m glad all the interactions with each others work! Yah! <span style="text-decoration: underline;"><strong><a href="http://www.openprocessing.org/sketch/112762" target="_blank"><span style="color: #99cc00; text-decoration: underline;">Check it out(click click )</span></a></strong></span><strong><a href="http://www.openprocessing.org/sketch/112762" target="_blank"><span style="color: #99cc00;">!</span></a></strong></p>
<div id="description">
<p>Functions:<br />
1) move patch to stop bouncing balls<br />
2) press mouse to drag balls with patch<br />
3) long-press keyboard to see flies clubbing!! B-)   (surprisingly fit <span style="text-decoration: underline;"><strong><span style="color: #ff3366; text-decoration: underline;"><a href="http://www.youtube.com/watch?v=PVzljDmoPVs&amp;list=RD02PVzljDmoPVs" target="_blank">this</a></span></strong></span> perfectly, the most EXCITING part, DANCING time!!)<br />
4) let go keyboard(== keyReleased) to calm down the flies, and gather all the balls within the patch</p>
<p>(Forgive me the awful screen pics, can&#8217;t screenshot since this one involve functions of KEY.)</p>
</div>
<p style="text-align: center;"><img loading="lazy" class="aligncenter  wp-image-231" alt="bouncing" src="/wp-content/uploads/2013/09/bouncing-1024x884.jpg" width="450" height="388" srcset="/wp-content/uploads/2013/09/bouncing-1024x884.jpg 1024w, /wp-content/uploads/2013/09/bouncing-300x259.jpg 300w, /wp-content/uploads/2013/09/bouncing.jpg 1550w" sizes="(max-width: 450px) 100vw, 450px" /></p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/09/clubbing_flies.jpg"><img loading="lazy" class="aligncenter  wp-image-230" alt="clubbing_flies" src="/wp-content/uploads/2013/09/clubbing_flies-1024x877.jpg" width="450" height="385" srcset="/wp-content/uploads/2013/09/clubbing_flies-1024x877.jpg 1024w, /wp-content/uploads/2013/09/clubbing_flies-300x257.jpg 300w, /wp-content/uploads/2013/09/clubbing_flies.jpg 1489w" sizes="(max-width: 450px) 100vw, 450px" /></a></p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/09/reset.jpg"><img loading="lazy" class="aligncenter  wp-image-232" alt="reset" src="/wp-content/uploads/2013/09/reset-1024x894.jpg" width="450" height="392" srcset="/wp-content/uploads/2013/09/reset-1024x894.jpg 1024w, /wp-content/uploads/2013/09/reset-300x261.jpg 300w, /wp-content/uploads/2013/09/reset.jpg 1396w" sizes="(max-width: 450px) 100vw, 450px" /></a></p>
<p style="text-align: left;">Here&#8217;s some struggles I&#8217;ve been through:</p>
<ol>
<li>when dragging balls, I calculated the distance with patch and ball, and then planed to add this fixed distance to the position of patch and set it as the position of balls. But since I wrote this code in <span style="color: #008000;">void mouseDragged()</span>, I recalculated the distance every time I dragged and that caused flickering. Thanks to the office hour w/ Daniel Shiffman, this calculation codes were moved into <span style="color: #008000;">void mousePressed()</span> and it worked!!! (tearing)</li>
<li>same stupid things happened when I want to bump flies with balls: I forgot to set conditions and thus make flies be affected by every balls!</li>
<li>Things getting complicated when I want to make the music band. In the end I successfully saved the original color, and changed the color once it&#8217;s been hit(<span style="color: #99cc00;">hitGround == true</span> &amp;&amp;  <span style="color: #99cc00;">cubes.x &lt; ball.x &lt;cubes.x+w</span>  &amp;&amp; <span style="color: #99cc00;">ball.y &lt; (height-h)</span>), and then restored the colors back later.</li>
</ol>
<p>And codes time!</p>
<p><span id="more-229"></span></p>
<p>Main</p>
<pre class="brush: java; gutter: true">Mover[] movers = new Mover[20];
Band musicBand;
Rain[] rains = new Rain[50];

boolean pressing = false;

void setup() {

  size(600, 500);
  for (int i=0; i&lt;movers.length; i++) {
    movers[i] = new Mover(random(0.5, 2.5), random(width), random(20,50));
  }

  musicBand = new Band(0, 21, 80);
  musicBand.setColor();

  for (int i=0; i&lt;rains.length; i++) {
    rains[i] = new Rain();
  }
}

void draw() {

  background(255);

  // set up musicBand
  musicBand.checkHit();
  musicBand.display();
  musicBand.colorBack();

  // set up forces
  float c = 0.5;
  float normal = 1;
  float frictionMag = c*normal;

  PVector wind = new PVector(0.01, 0);
  PVector gravity = new PVector(0, 0.1);

  for (int i=0; i&lt;movers.length; i++) {

    PVector friction = movers[i].velocity.get();
    friction.mult(-1);
    friction.normalize();    
    friction.mult(frictionMag);

    // if movers in the range of patch, add firction and change color
    if (movers[i].location.x &gt; mouseX-100/2 &amp;&amp; movers[i].location.x &lt; mouseX+100/2
      &amp;&amp; movers[i].location.y &gt; mouseY-100/2 &amp;&amp; movers[i].location.y &lt; mouseY+100/2) {
      movers[i].applyForce(friction);

      boolean insideColor = true;
      movers[i].insideColor = insideColor;

    } else {
      boolean insideColor = false;
      movers[i].insideColor = insideColor;
    }

    movers[i].applyForce(wind);
    movers[i].applyForce(gravity);

    movers[i].update();
    movers[i].checkEdges(width, height-musicBand.h-movers[i].mass*16/2);
    movers[i].display();

  }

  // set up flies
  for (int j=0; j&lt;rains.length; j++) {

    // be affected by balls
    for (int i=0; i&lt;movers.length; i++) {
      rains[j].updateMover(movers[i].location.x, movers[i].location.y);
    }

    rains[j].checkFloor();
    rains[j].show();
  }

  // patch
  rectMode(CENTER);
  pushStyle();
  noStroke();
  fill(150,50);
  rect(mouseX, mouseY, 100, 100);
  stroke(220,100);
  for (int i=0; i&lt;=100; i+=5) {
    line(mouseX-50+i, mouseY-50, mouseX-50+i, mouseY+50);
  }
  for (int i=0; i&lt;=100; i+=5) {
    line(mouseX-50, mouseY-50+i, mouseX+50, mouseY-50+i);
  }
  popStyle();
  rectMode(CORNER);

  // event when key pressed
  if (pressing == true) {
    pushStyle();
    fill(0);
    noStroke();
    rect(0,0,width,height);
    popStyle();
  }

}

void mousePressed() {

  for (int i=0; i&lt;movers.length; i++) {

    // if in the range of the patch, be able to drag balls
    if (movers[i].location.x &gt; mouseX-100/2 &amp;&amp; movers[i].location.x &lt; mouseX+100/2 &amp;&amp;
      movers[i].location.y &gt; mouseY-100/2 &amp;&amp; movers[i].location.y &lt; mouseY+100/2) {

      boolean inside = true;
      movers[i].inside = inside;

      PVector mouse = new PVector(mouseX, mouseY);
      PVector dis = PVector.sub(movers[i].location, mouse);
      movers[i].dis = dis;

    } else {

      boolean inside = false;
      movers[i].inside = inside;
    }

  }
}

void mouseDragged() {
  for (int i=0; i&lt;movers.length; i++) {

    PVector mouse = new PVector(mouseX, mouseY);
    if (movers[i].inside == true) {
      movers[i].location = PVector.add(mouse, movers[i].dis);
    }

  }
}

void keyPressed() {
  background(0);

  pressing = true;

  // calm down all the balls and gather them into patch
  for (int i=0; i&lt;movers.length; i++) {
    movers[i].location.x = mouseX+random(-40,40);
    movers[i].location.y = mouseY+random(-30,30);;
    movers[i].velocity.mult(0);
    movers[i].acceleration.mult(0);
  }

  for (int j=0; j&lt;rains.length; j++) {
    rains[j].checkFloor();
    rains[j].show();
  }

}

void keyReleased() {
  pressing = false;

  // reset all the flies
  for (int j=0; j&lt;rains.length; j++) {
    rains[j] = new Rain();
  }

}</pre>
<p>Mover</p>
<pre class="brush: java; gutter: true">class Mover {

  PVector location;
  PVector velocity;
  PVector acceleration;

  float mass;

  PVector dis;
  boolean inside = false;
  boolean insideColor = false;

  boolean lastHitState = false;
  boolean hitState = false;
  boolean hitGround = false;

  Mover() {
    location = new PVector(random(width/2), random(height/2));
    velocity = new PVector(0, 0);
    acceleration = new PVector(0, 0);
    mass = 1;
  }

  Mover(float m, float x, float y) {
    mass = m;
    location = new PVector(x, y);
    velocity = new PVector(0, 0);
    acceleration = new PVector(0, 0);
  }

  void update() {

    velocity.add(acceleration);
    location.add(velocity);
    acceleration.mult(0);
  }

  void display() {
    pushStyle();
    noStroke();

    float time = second();
    fill(time % 255, 50);
    ellipse(location.x, location.y, mass*20, mass*20);

    if (insideColor == true) {
      fill(252, 255, 3, 180);
    } else {
      fill(0, 232, 254, 150);
    }

    ellipse(location.x, location.y, mass*12.5, mass*12.5);

    popStyle();
  }

  void checkEdges(float w, float h) {
    if (location.x &gt; w) {
      location.x = w;
      velocity.x *= -1;
    } 
    else if (location.x &lt; 0) {
      location.x = 0;
      velocity.x *= -1;
    }

    if (location.y &gt; h) {
      location.y = h;
      velocity.y *= -1;
      hitGround = !hitGround;
    }

    if (location.y &lt; h-100) {
      hitGround = false;
    }

  }

  void applyForce(PVector force) {
    PVector f = PVector.div(force, mass);
    acceleration.add(f);
  }
}</pre>
<p>Rain</p>
<pre class="brush: java; gutter: true">class Rain{

  PVector location;
  PVector velocity;
  PVector acceleration;
  PVector distance;
  PVector distanceRain;

  Bug bug;

  float w, h;
  float topSpeed;
  color c;

  Rain() {

    location = new PVector(random(width), -50);
    velocity = new PVector(random(-0.1, 0.1), random(-0.1, 0.1));
    distance = new PVector(20, 20);
    distanceRain = new PVector(10, 10);

    w = 4;
    h = 6.5;
    topSpeed = 3;

  }

  void show() {

    smooth();
    pushStyle();

    noStroke();
    bug = new Bug(location.x, location.y, w, h);
    bug.show();

    popStyle();
  }

  void updateMover(float x_, float y_) {

    PVector mover = new PVector(x_, y_);
    PVector dir = PVector.sub(mover, location);

    acceleration = new PVector(0, 0);

    if (dir.mag() &lt; distanceRain.mag()) {

      dir.normalize();
      dir.x *= random(-0.2);
      dir.y *= random(-0.2);
      acceleration = dir;

    }

    velocity.add(acceleration);
    velocity.limit(topSpeed);
    location.add(velocity);
  }

  void checkFloor() {

    if (location.y &gt; (height - musicBand.h)) {
      location.y = 0;
    } else if (location.y &lt; 0) {
      location.y = (height - musicBand.h);
    }

    if (location.x &gt; width) {
      location.x = 0;
    } else if (location.x &lt; 0) {
      location.x = width;
    }

  }

}</pre>
<p>Drop</p>
<pre class="brush: java; gutter: true">class Drop{

  float x, y, w, h;

  Drop(float _x, float _y, float _w, float _h) {
    x = _x;
    y = _y;
    w = _w;
    h = _h;
  }

  void show() {

    pushStyle();
    smooth();
    noStroke();
    triangle(x, y-h, x+w/2, y, x-w/2, y);
    ellipse(x, y, w, w);
    popStyle();
  }

}</pre>
<p>Cube</p>
<pre class="brush: java; gutter: true">class Cube{
  float x; 
  float y;
  float w, h;
  color c;

  boolean beHit;

  Cube(float _x, float _y, float _w, float _h, color _c) {
    x = _x;
    y = _y;
    w = _w;
    h = _h;
    c = _c;
    beHit = false;
  }

  void display() {
    pushStyle();
    noStroke();
    fill(c);
    rect(x, y, w, h);
    popStyle();
  }

}</pre>
<p>Bug</p>
<pre class="brush: java; gutter: true">class Bug{

  float x, y, w, h;
  Drop[] drops;

  Bug(float _x, float _y, float _w, float _h) {
    x = _x;
    y = _y;
    w = _w;
    h = _h;
    drops = new Drop[4];
  }

  void show() {
    pushStyle();
    smooth();
    fill(173, 191, 216, 150);

    pushMatrix();
    translate(x, y);
    rotate(radians(40));
    drops[0] = new Drop(0, 6, w, h);
    drops[0].show();
    rotate(radians(70));
    drops[1] = new Drop(0, 6, h, h);
    drops[1].show();
    rotate(radians(140));
    drops[2] = new Drop(0, 6, h, h);
    drops[2].show();
    rotate(radians(70));
    drops[3] = new Drop(0, 6, w, h);
    drops[3].show();

    popMatrix();
    popStyle();
  }

}</pre>
<p>Band</p>
<pre class="brush: java; gutter: true">class Band {
  float x; 
  float y;
  float w, h;
  int interval;
  color[] colors;
  color[] colorSave;

  Cube[] cubes;

  Band(float _x, int _interval, float _h) {
    x = _x;
    interval = _interval;
    h = _h;

    w = width / interval;
    y = height - h;
    colors = new color[interval];
    colorSave = new color[interval];
    cubes = new Cube[interval];
  }

  void setColor() {
    for (int i=0; i&lt;interval; i++) {
      float cc = random(130);
      colors[i] = color(cc, cc+120, cc+60);
      colorSave[i] = colors[i];
    }
  }

  void checkHit() {
    for (int i=0; i&lt;interval; i++) {
      for (int j=0; j&lt;movers.length; j++) {
        if (movers[j].hitGround == true &amp;&amp; movers[j].location.x &gt; cubes[i].x &amp;&amp; 
          movers[j].location.x &lt; cubes[i].x+w &amp;&amp; movers[j].location.y &lt; (height-h)) {
          float cc = random(130);
          colors[i] = color(cc+120, cc+120, 0);
        }
      }
    }
  }

  void colorBack() {
    for (int i=0; i&lt;interval; i++) {
      for (int j=0; j&lt;movers.length; j++) {
        if (movers[j].hitGround == false) {
          colors[i] = colorSave[i];
        }
      }
    }
  }

  void display() {
    float tempX = x;

    for (int i=0; i&lt;interval; i++) {
      cubes[i] = new Cube(tempX, y, w, h, colors[i]);
      cubes[i].display();
      tempX += w;
    }
  }

}</pre>
]]></content:encoded>
					
					<wfw:commentRss>/icm_4_patchballsflies/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
